require 'tempfile'  

namespace :js do
	
    # ---------- EDIT THESE PROPERTIES! --------- #
    RHINO_JAR_PATH	= "rhino/js.jar"
    JSLINT_PATH		= "jslint/jslint.js"
    JAVA_JAR_CMD	= "java -jar"
    JSLINT_SUCCESS	= "^jslint: No problems found in"
    JS_EXCLUDE		= JSLINT_PATH

    YUI_DEV_PROPS	= "--nomunge --line-break"
    YUI_COMP_JAR_PATH	= "yui_comp/yuicompressor-2.4.2.jar"
    AMALGAMATION_FILE	= "amalgamation.js"

    desc "Deletes the amalgamation file (if exists)."
    task :clean do
	if File.exists?("#{AMALGAMATION_FILE}") then
	    system "rm #{AMALGAMATION_FILE}"
	    puts "Deleted: #{AMALGAMATION_FILE}."
	else
	    puts "Nothing to clean: #{AMALGAMATION_FILE} file does not exist."
	end
    end

    # Modified the :jslint task from: http://jonathanjulian.com/
    desc "Puts each JS script through JSLint. Exits if there's a problem."
    task :lint => [:clean] do
	failed_js_scripts = []
	jsfiles = File.join("**", "*.js")	# ** makes it recursive

	# A bit of ugliness to reject the jslint.js file itself (if it's in a subdir of the cwd)
	Dir.glob(jsfiles).reject{|path| path =~ /#{Regexp.quote(JS_EXCLUDE)}/ }.each do |js|
	    command = "#{JAVA_JAR_CMD} #{RHINO_JAR_PATH} #{JSLINT_PATH} #{js}"
	    jslnt_result = %x{#{command}}
	    unless jslnt_result =~ /#{Regexp.compile(JSLINT_SUCCESS)}/
		puts "#{jslnt_result}:"
		puts jslnt_result
		failed_js_scripts << js
	    end
	end
	if failed_js_scripts.size > 0
	    exit 1
	else
	    puts "---------------------------------------------"
	    puts "Passed JSLint tests for all JavaScript files"
	    puts "---------------------------------------------"
	    puts
	end
    end
  
    desc "Minify JavaScript by concatenating files, then apply YUI Compressor to amalgamation file"
    task :min => [:clean, :lint] do
	concat_file = Tempfile.new("temp_file.js", Dir.getwd )
	jsfiles = File.join("**", "*.js")	# ** makes it recursive
	Dir.glob(jsfiles).reject{|path| path =~ /#{Regexp.quote(JS_EXCLUDE)}/ }.each do |js|
	    open(js) do |f| 
		concat_file.write(f.read) 
	    end
	end
	concat_file.rewind
	command = "#{JAVA_JAR_CMD} #{YUI_COMP_JAR_PATH} --type js  #{concat_file.path} -o #{AMALGAMATION_FILE}"
	%x{#{command}}
	puts "---------------------------------------------"
	puts "Minified JavaScript - resulting file: #{AMALGAMATION_FILE}"
	puts "---------------------------------------------"
	puts
    end    
end
